# C. Рассадка в аудитории
# Экзамен по берляндскому языку проходит в узкой и длинной аудитории. На экзамен пришло N студентов. Все они посажены в ряд.
# Таким образом, позиция каждого человека задается координатой на оси Ox (эта ось ведет вдоль длинной аудитории). Два человека могут разговаривать, если расстояние между ними меньше или равно D.
# Какое наименьшее количество типов билетов должен подготовить преподаватель, чтобы никакие два студента с одинаковыми билетами не могли разговаривать? Выведите способ раздачи преподавателем билетов.

# Формат ввода
# В первой строке входного файла содержится два целых числа N, D (1 ≤ N ≤ 10000; 0 ≤ D ≤ 10^6).
# Вторая строка содержит последовательность различных целых чисел X1, X2, ..., XN, где Xi (0 ≤ Xi ≤ 10^6) обозначает координату вдоль оси Ox i-го студента

# Формат вывода
# В первую строчку выходного файла выведите количество вариантов, а во вторую, разделяя пробелами, номера вариантов студентов в том порядке, в каком они перечислены во входном файле.

def get_max_variant(students):
	max_variant = 0
	variants = 0
	for _, event, _ in students:
		if event == -1:
			variants += 1
			max_variant = max(max_variant, variants)
		else:
			variants -= 1
	return max_variant

n, d = map(int, input().split())
students = []
i = 0
for x in map(int, input().split()):
	students.append((x, -1, i))
	students.append((x + d, 1, i))
	i += 1

students.sort()
max_variant = get_max_variant(students)
ans = [None] * n
variant = 1
for _, event, i in students:
	if event == -1:
		if variant > max_variant:
			variant = 1
		ans[i] = variant
		variant += 1

print(max_variant)
print(*ans)
