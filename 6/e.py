# E. Улучшение успеваемости
# В лицее на уроках информатики ответы учеников оцениваются целым числом баллов от 2 до 5. Итоговая оценка по информатике выставляется как среднее арифметическое оценок на всех уроках, округленное до ближайшего целого числа. Если среднее значение находится ровно посередине между двумя целыми числами, то оценка округляется вверх.
# Все ученики лицея стремятся получить итоговую оценку по информатике не ниже 4 баллов. К сожалению, один из учеников получил на уроках a двоек, b троек и c четверок. Теперь он планирует получить несколько пятерок, причем хочет, чтобы итоговая оценка была не меньше 4 баллов. Ему надо понять, какое минимальное количество пятерок ему необходимо получить, чтобы добиться своей цели.
# Требуется написать программу, которая по заданным целым неотрицательные числам a , b и c определяет минимальное количество пятерок, которое необходимо получить ученику, чтобы его итоговая оценка по информатике была не меньше 4 баллов.

# Формат ввода
# Входные данные содержат три строки. Первая строка содержит целое неотрицательное число a , вторая строка содержит целое неотрицательное число b , третья строка содержит целое неотрицательное число c (0 ≤ a, b, c ≤ 10^15, a + b + c ≥ 1).

# Формат вывода
# Выходные данные должны содержать одно число: минимальное число пятерок, которое необходимо получить ученику, чтобы итоговая оценка была не меньше 4 баллов.

a = int(input())
b = int(input())
c = int(input())

left = 0
right = a + b + c
while left < right:
	m = (right + left) // 2
	# (2 * a + 3 * b + 4 * c + 5 * m) / (a + b + c + m) >= 3 1/2
	# чтобы избавиться от деления, умножим обе части формулы расчёта среднеарифметической оценки на 2 * (a + b + c + m)
	if 2 * (2 * a + 3 * b + 4 * c + 5 * m) >= 7 * (a + b + c + m):
		right = m
	else:
		left = m + 1

print(left)
