# D. Космическое поселение
# Для освоения Марса требуется построить исследовательскую базу. База должна состоять из n одинаковых модулей, каждый из которых представляет собой прямоугольник.
# Каждый модуль представляет собой жилой отсек, который имеет форму прямоугольника размером a на b метров. Для повышения надежности модулей инженеры могут добавить вокруг каждого модуля слой дополнительной защиты.
# Толщина этого слоя должна составлять целое число метров, и все модули должны иметь одинаковую толщину дополнительной защиты. Модуль с защитой, толщина которой равна d метрам, будет иметь форму прямоугольника размером (a+2d)(b+2d) метров.
# Все модули должны быть расположены на заранее подготовленном прямоугольном поле размером wh метров. При этом они должны быть организованы в виде регулярной сетки: их стороны должны быть параллельны сторонам поля, и модули должны быть ориентированы одинаково.
# Требуется написать программу, которая по заданным количеству и размеру модулей, а также размеру поля для их размещения, определяет максимальную толщину слоя дополнительной защиты, который можно добавить к каждому модулю.

# Формат ввода
# Входной файл содержит пять разделенных пробелами целых чисел: n, a, b, w и h (1 ≤ n, a, b, w, h ≤ 10^18). Гарантируется, что без дополнительной защиты все модули можно разместить в поселении описанным образом.

# Формат вывода
# Выходной файл должен содержать одно целое число: максимальную возможную толщину дополнительной защиты. Если дополнительную защиту установить не удастся, требуется вывести число 0.

def get_shield(n, a, b, w, h):
	# минимальная толщина защиты
	left = 0
	# максимальная толщина защиты, если все модули стоят в один ряд
	right = (w - a) // 2
	while left < right:
		m = (left + right + 1) // 2
		total_a = a + 2 * m
		total_b = b + 2 * m
		if (w // total_a) * (h // total_b) >= n:
			left = m
		else:
			right = m - 1
	return left

n, a, b, w, h = map(int, input().split())
# выберем максимальную толщцину защиты из 2-х вариантов размещения модулей (поменяем местами ширину и высоту модулей)
print(max(get_shield(n, a, b, w, h), get_shield(n, b, a, w, h)))
